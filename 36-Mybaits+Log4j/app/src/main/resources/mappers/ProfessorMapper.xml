<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper 
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd"> 
 
<mapper namespace="ProfessorMapper"> 
 
    <!-- Beans 클래스의 객체이름(id)과 클래스이름(type)을 명시한다. --> 
    <resultMap type="kr.gilju.models.Professor" id="professor"> 
        <!-- Beans의 멤버변수(property)이름과 대상 테이블의 컬럼(column)을 연결한다. --> 
        <result property="profNo" column="profno" /> 
        <result property="name" column="name" /> 
        <result property="userid" column="userid" /> 
        <result property="position" column="position" /> 
        <result property="sal" column="sal" /> 
        <result property="hiredate" column="hiredate" /> 
        <result property="comm" column="comm" /> 
        <result property="deptNo" column="deptno" /> 
    </resultMap>
 
    <!-- 데이터 저장을 위한 기능 정의 --> 
    <insert id="insert" 
            parameterType="kr.gilju.models.Professor" 
            useGeneratedKeys="true" 
            keyProperty="profNo"> 
        INSERT INTO professor (name, userid, position, sal, hiredate, comm, deptno) VALUES (#{name}, #{userid}, #{position}, #{sal}, #{hiredate}, #{comm}, #{deptNo});
    </insert> 
 
    <!-- 데이터 삭제를 위한 기능 정의 --> 
    <delete id="delete" 
            parameterType="kr.gilju.models.Professor"> 
        DELETE FROM professor WHERE profno=#{profNo};
    </delete> 
 
    <!-- 데이터 갱신을 위한 기능 정의 --> 
    <update id="update" 
            parameterType="kr.gilju.models.Professor">
        UPDATE professor 
        SET name=#{name}, userid=#{userid}, position=#{position}, sal=#{sal}, hiredate=#{hiredate}, comm=#{comm}, deptno=#{deptNo} 
        WHERE profno=#{profNo};    
    </update> 
 
    <!-- 단일행 조회를 위한 기능 정의 --> 
<select id="selectItem" 
        parameterType="kr.gilju.models.Professor" 
        resultMap="professor"> 
        SELECT profno, name, userid, position, sal, hiredate, comm, deptno 
        FROM professor 
        WHERE profno = #{profNo};
</select> 
 
    <!-- 다중행 조회를 위한 기능 정의 --> 
 <select id="selectList" 
            resultMap="professor"> 
        SELECT profno, name, userid, position, sal, hiredate, comm, deptno FROM professor;
    </select>
</mapper>
